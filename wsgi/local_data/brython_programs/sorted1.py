'''Python 3 串列資料(List)的應用

1. 了解何謂串列資料 (List)

[1, 2, 3] 以中括號圈起, 逗點隔開的群組資料, 就是串列資料
[1, 2, 3, "資料"] 也是串列資料
若 變數 = [1, 2, 3] 則 變數[0] = 1, 變數[1] = 2, 
表示串列的序號由 0 開始

串列資料的次序可以重新排列, 也可以排序.
>>> sorted([3, 1, 2])
[1, 2, 3]

也可以反向排序
>>> sorted([3, 1, 2], reverse=True)
[3, 2, 1]

有關串列 (List) 的用法, 請參照 python3教材_2.pdf, 
第 4 頁~第 11 頁, 以及第 27 頁~ 30 頁的說明.

教材位置: https://sites.google.com/a/mde.tw/service/2012_fall_c1

2. 了解何謂元組資料 (Tuple)

(1, 2, 3) 以小括號圈起, 逗點隔開的群組資料, 
就是元組資料.
(1, 2, “資料”) 也是元組資料
若 變數 = (1, 2, 3) 則 變數[0] = 1, 變數[1] = 2, 
表示元組的序號也由 0 開始

元組資料之次序不可重新排列, 因此也無法進行排序 
(亦即, 無法使用 變數.sort(), 但是可以利用 sorted(變數) 
生成另外一個排序的串列), 但是可以經過 list() 函式
將元組資料轉為串列資料, 就可以進行排序:
'''
a = [3, 2, 4, 5, 1]
# 數列排序
b = sorted(a)
# 反向排序
c = sorted(a, reverse=True)
print(b, c)

元組 = (1, 2, 3)
串列 = list(元組)
# 元組必須利用 list() 轉為串列資料後, 才可以排序, 因為元祖資料中的索引是不可變更次序的
print(sorted(串列))
print(sorted(串列, reverse=True))
 
# 課程資料為串列資料, 其元件則為元組資料, 串列可排序, 元組則次序固定
課程資料 =[(2,1,"1,2 課程"),(1,2,"2,1 課程"),(3,3,"3,3 課程")]
 
print(sorted(課程資料, key=lambda 課程: 課程[0], reverse=True))
print(sorted(課程資料, key=lambda 課程: 課程[1], reverse=True))
print(sorted(課程資料, key=lambda 課程: 課程[2], reverse=True))
'''
上列程式採用 lambda 函式, 所謂 lambda 函式, 
指沒有給定名稱的函式 (亦即在執行階段, 
並沒有指向某一特定函式名稱的函式), 
而 lambda 即此種無名稱函式的建構子.

其中的 key=lambda 課程: 課程[0], 
表示排序用的 key 變數, 指定為 lambda 類別的無名函式, 
其輸入為”課程”而傳回值為”課程[0]“, 也就是說, 
該行課程資料的排序所指定的排序依據 (即 key) 
指定為課程資料元素中序號為 0 的”列”資料.

換言之, sorted(課程資料, key=lambda 課程: 
課程[0]) 就會以列資料的次序進行排序.
'''
